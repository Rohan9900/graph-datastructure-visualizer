"use strict";
self["webpackHotUpdategraph_data_structure_visualizer"]("stories-Graph-stories",{

/***/ "./src/stories/Graph.stories.js":
/*!**************************************!*\
  !*** ./src/stories/Graph.stories.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Primary: () => (/* binding */ Primary),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Graph */ "./src/stories/Graph.jsx");


// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: "Example/Graph",
  component: _Graph__WEBPACK_IMPORTED_MODULE_0__["default"],
  parameters: {
    // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
    canvasRef: null,
    data: {
      L: ["R", "S"],
      R: ["S"],
      S: []
    },
    isChange: true,
    startingPoint: "L",
    textColor: "black",
    mainHeight: 400,
    mainWidth: 1000
  },
  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
  tags: ["autodocs"],
  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes
  argTypes: {
    backgroundColor: {
      control: "color"
    }
  }
});

// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
const Primary = {
  args: {
    layout: "centered",
    canvasRef: null,
    data: {
      L: ["R", "S"],
      R: [],
      S: []
    },
    isChange: true,
    startingPoint: "L",
    textColor: "black",
    mainHeight: 400,
    mainWidth: 1000
  }
};
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    layout: \"centered\",\n    canvasRef: null,\n    data: {\n      L: [\"R\", \"S\"],\n      R: [],\n      S: []\n    },\n    isChange: true,\n    startingPoint: \"L\",\n    textColor: \"black\",\n    mainHeight: 400,\n    mainWidth: 1000\n  }\n}",
      ...Primary.parameters?.docs?.source
    }
  }
};
const __namedExportsOrder = ["Primary"];

/***/ })

});