"use strict";
self["webpackHotUpdategraph_data_structure_visualizer"]("Graph-stories",{

/***/ "./stories/Graph.stories.js":
/*!**********************************!*\
  !*** ./stories/Graph.stories.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Primary: () => (/* binding */ Primary),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Graph__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Graph */ "./stories/Graph.js");


// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  title: "Example/Graph",
  component: _Graph__WEBPACK_IMPORTED_MODULE_0__.GraphVisualizer,
  parameters: {
    // Optional parameter to center the component in the Canvas. More info: https://storybook.js.org/docs/react/configure/story-layout
    canvasRef: null,
    data: {
      A: ["B", "C"],
      B: ["D", "E"],
      C: ["F"],
      D: ["F", "I"],
      E: ["G"],
      F: [],
      G: [],
      H: [],
      I: ["k"],
      J: [],
      K: ["J"]
    },
    isChange: true,
    startingPoint: "A",
    textColor: "black",
    mainHeight: 400,
    mainWidth: 1000
  },
  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
  tags: ["autodocs"],
  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes
  argTypes: {
    backgroundColor: {
      control: "color"
    }
  }
});

// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
const Primary = {
  args: {
    canvasRef: null,
    data: {
      A: ["B", "C", "D", "E", "F", "G", "H"],
      B: ["D", "E"],
      C: ["F"],
      D: ["F", "I"],
      E: ["G"],
      F: ["J"],
      G: [],
      H: [],
      I: ["K"],
      J: ["L", "M"],
      K: ["J"],
      L: [],
      M: []
    },
    isChange: true,
    startingPoint: "A",
    textColor: "black",
    mainHeight: 400,
    mainWidth: 2000
  }
};
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...Primary.parameters?.docs,
    source: {
      originalSource: "{\n  args: {\n    canvasRef: null,\n    data: {\n      A: [\"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"],\n      B: [\"D\", \"E\"],\n      C: [\"F\"],\n      D: [\"F\", \"I\"],\n      E: [\"G\"],\n      F: [\"J\"],\n      G: [],\n      H: [],\n      I: [\"K\"],\n      J: [\"L\", \"M\"],\n      K: [\"J\"],\n      L: [],\n      M: []\n    },\n    isChange: true,\n    startingPoint: \"A\",\n    textColor: \"black\",\n    mainHeight: 400,\n    mainWidth: 2000\n  }\n}",
      ...Primary.parameters?.docs?.source
    }
  }
};
const __namedExportsOrder = ["Primary"];

/***/ })

});